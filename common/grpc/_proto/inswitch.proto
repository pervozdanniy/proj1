syntax = "proto3";

package skopa.core;

import "google/protobuf/empty.proto";
import "common.proto";

service CardsService {
    rpc GetOrCreate (common.UserIdRequest) returns (CardResponse);

    rpc Upgrade (SetPinRequest) returns (Card);
  
    rpc Details (common.UserIdRequest) returns (CardDetails);

    rpc SetPin (SetPinRequest) returns (google.protobuf.Empty);

    rpc RegenerateCvv (common.UserIdRequest) returns (RegenerateCvvResponse);

    rpc Activate (common.UserIdRequest) returns (google.protobuf.Empty);

    rpc Deactivate (common.UserIdRequest) returns (google.protobuf.Empty);

    rpc Block (BlockCardRequest) returns (google.protobuf.Empty);

    rpc Unblock (common.UserIdRequest) returns (google.protobuf.Empty);
}

service ExternalBalanceService {
    rpc GetBalance (common.UserIdRequest) returns (ExternalBalanceResponse);

    rpc GetPaymentMethodReference (common.UserIdRequest) returns (ExternalPaymentMethodResponse);
}

service ExternalWithdrawAuthorizationService {
    rpc Authorize (ExternalWithdrawAuthorizationRequest) returns (ExternalWithdrawAuthorizationResponse);

    rpc Update (ExternalWithdrawUpdateRequest) returns (google.protobuf.Empty);
}

message Card {
    string reference = 1;
    bool is_virtual = 2;
    string currency = 3;
    string status = 4;
    optional string pan = 5;
}

message CardResponse {
    optional Card card = 1;
}

message ExpandedCardInfo {
    string cvv = 1;
    string pan = 2;
}

message CardDetails {
    string reference = 1;
    string status = 2;
    string issue_date = 3;
    string type = 4;
    string brand = 5;
    string currency = 6;
    optional ExpandedCardInfo expanded = 7;
}

message SetPinRequest {
    uint32 user_id = 1;
    string pin = 2;
}

message RegenerateCvvResponse {
    string cvv = 1;
}

enum BlockReason {
    BR_UNSPECIFIED = 0;
    BR_CARD_LOST = 1;
    BR_CARD_STOLEN = 2;
    BR_CARD_INACTIVE = 5;
    BR_CARD_REPLACED = 8;
  }

message BlockCardRequest {
    uint32 user_id = 1;
    BlockReason reason = 2;
}

message ExternalBalanceEntry {
    string currency = 1;
    double amount = 2;
}

message ExternalBalanceResponse {
    repeated ExternalBalanceEntry balance = 1;
}

message ExternalPaymentMethodResponse {
    string reference = 1;
}

message ExternalWithdrawAuthorizationRequest {
    bytes payload = 1;
}

message ExternalWithdrawAuthorizationResponse {
    string authorization_id = 1;
    string status = 2;
}

message ExternalWithdrawUpdateRequest {
    string authorization_id = 1;
    bytes payload = 2;
}