syntax = "proto3";

import "common.proto";

package skopa.core;

service PaymentGatewayService {
  rpc List(PaymentGatewayListQuery) returns (PaymentGatewayListResponse);
  rpc GetToken (common.IdRequest) returns (PG_Token);
  rpc CreateAccount (UserIdRequest) returns (AccountResponse);
  rpc GetAccount (UserIdRequest) returns (AccountResponse);
  rpc GetContact (UserIdRequest) returns (ContactResponse);
  rpc UpdateAccount (AccountIdRequest) returns (common.SuccessResponse);
  rpc CreateContact (UserIdRequest) returns (common.SuccessResponse);
  rpc UploadDocument (UploadDocumentRequest) returns (DocumentResponse);
  rpc DocumentCheck (AccountIdRequest) returns (common.SuccessResponse);
  rpc CipCheck (AccountIdRequest) returns (common.SuccessResponse);
  rpc CreateReference (UserIdRequest) returns (PrimeTrustData);
  rpc GetBalance (UserIdRequest) returns (BalanceResponse);
  rpc GetTransferById (UserIdRequest) returns (TransferResponse);
  rpc GetDepositById (UserIdRequest) returns (DepositDataResponse);
  rpc GetTransactions (UserIdRequest) returns (TransactionResponse);
  rpc GetWithdrawalParams (UserIdRequest) returns (WithdrawalsDataResponse);
  rpc GetDepositParams (UserIdRequest) returns (DepositParamsResponse);
  rpc UpdateBalance (AccountIdRequest) returns (common.SuccessResponse);
  rpc UpdateContribution (AccountIdRequest) returns (common.SuccessResponse);
  rpc GetBankAccounts (UserIdRequest) returns (BankAccountsResponse);
  rpc AddBankAccountParams (BankAccountParams) returns (BankAccountParams);
  rpc AddWithdrawalParams (WithdrawalParams) returns (WithdrawalResponse);
  rpc MakeWithdrawal (TransferMethodRequest) returns (PrimeTrustData);
  rpc UpdateWithdraw (AccountIdRequest) returns (common.SuccessResponse);
  rpc CreateCreditCardResource (UserIdRequest) returns (CreditCardResourceResponse);
  rpc VerifyCreditCard (VerifyCreditCardRequest) returns (common.SuccessResponse);
  rpc GetCreditCards (UserIdRequest) returns (CreditCardsResponse);
  rpc TransferFunds (TransferFundsRequest) returns (TransferFundsResponse);
  rpc MakeContribution (MakeContributionRequest) returns (ContributionResponse);
  rpc AddDepositParams (DepositParamRequest) returns (DepositResponse);

}

message DepositParamsResponse{
  repeated DepositParam data = 1;
}

message DepositParam {
  uint32 id = 1;
  string transfer_method_id = 2;
  string bank_account_number = 3;
  string routing_number = 4;
  string funds_transfer_type = 5;
  string bank_account_name = 6;
}

message DepositDataResponse {
  uint32 id = 1;
  string uuid = 2;
  string amount = 3;
  string currency_type = 4;
  string contributor_email = 5;
  string contributor_name = 6;
  string funds_transfer_type = 7;
  optional uint32 deposit_param_id = 8;
  optional uint32 card_resource_id = 9;
}

message TransactionResponse {
  repeated Transaction data = 1;
}

message Transaction {
  uint32 id = 1;
  string title = 2;
  string url = 3;
  string created_at = 4;
}

message TransferResponse {
  string to = 1;
  string from = 2;
  string amount = 3;
  string currency_type = 4;
  string status = 5;
  string created_at = 6;
}

message ContactResponse {
  string uuid = 1;
  string first_name = 2;
  string last_name = 3;
  bool identity_confirmed = 4;
  bool proof_of_address_documents_verified = 5;
  bool identity_documents_verified = 6;
  bool aml_cleared = 7;
  bool cip_cleared = 8;


}

message AccountResponse {
  string uuid = 1;
  string name = 2;
  string number = 3;
  string status = 4;
}


message DocumentResponse {
  string document_id = 1;
}

message DepositParamRequest{
  uint32 id = 1;
  uint32 bank_account_id = 2;
  string funds_transfer_type = 3;
}

message DepositResponse{
  string transfer_method_id = 1;
}


message MakeContributionRequest {
  uint32 id = 1;
  string funds_transfer_method_id = 2;
  string amount = 3;
  string cvv = 4;
}


message ContributionResponse {
 string contribution_id = 1;
}

message BankAccountParams{
  uint32 id = 1;
  string bank_account_name = 2;
  string bank_account_number = 3;
  string routing_number = 4;
}

message BankAccountsResponse {
  repeated BankAccountParams data = 1;
}

message TransferFundsRequest {
  uint32 sender_id = 1;
  uint32 receiver_id = 2;
  string amount = 3;
}

message TransferFundsResponse{
  TransferFunds data = 1;
}

message TransferFunds {
  string uuid = 1;
  string amount = 2;
  string currency_type = 3;
  string status = 4;
  string created_at = 5;
}


message CreditCardsResponse{
  repeated CreditCard data = 1;
}

message CreditCard {
  string id = 1;
  string transfer_method_id = 2;
  string credit_card_bin = 3;
  string credit_card_type = 4;
  string credit_card_expiration_date = 5;
  string created_at = 6;
  string updated_at = 7;
  string status = 8;
  string uuid = 9;
}

message VerifyCreditCardRequest {
  uint32 id = 1;
  string resource_id = 2;
}

message CreditCardResourceResponse {
  string resource_id = 1;
  string resource_token = 2;
}

message WithdrawalsDataResponse{
  repeated Withdrawal data = 1;
}

message Withdrawal {
  uint32 id = 1;
  string transfer_method_id = 2;
  string bank_account_number = 3;
  string routing_number = 4;
  string funds_transfer_type = 5;
  string bank_account_name = 6;
}


message PaymentGatewayRequest {
  string name = 1;
}

message PaymentGatewayListQuery {
  uint32 limit = 1;
  uint32 offset = 2;
}

message PaymentGatewayListResponse {
  repeated PaymentGateway items = 1;
  uint32 count = 2;
}

message PaymentGateway {
  uint32 id =1;
  string alias = 2;
  string name = 3;
}


message TransferMethodRequest {
  uint32 id = 1;
  string funds_transfer_method_id = 2;
  string amount = 3;
}

message WithdrawalResponse{
   string transfer_method_id = 1;
}

message WithdrawalParams{
  uint32 id = 1;
  uint32 bank_account_id = 2;
  string funds_transfer_type = 3;
}

message BalanceResponse{
  string settled = 1;
  string currency_type = 2;
}

message PrimeTrustData {
  string data = 1;
}


message AccountIdRequest{
  string id = 1;
  string payment_gateway = 2;
  optional string resource_id = 3;
}


message FileData  {
  bytes buffer = 1;
  string fieldname = 2;
  string originalname = 3;
  string encoding = 4;
  string mimetype = 5;
  uint32 size = 6;
}

message UploadDocumentRequest {
  string label = 1;
  FileData file = 2;
  UserIdRequest userId = 3;

}


message UserIdRequest{
  uint32 id = 1;
  optional uint32 resource_id = 2;
}

message PG_Token {
  Token_Data data = 1;
}

message Token_Data {
  string token = 1;
}