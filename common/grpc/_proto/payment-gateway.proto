syntax = "proto3";

import "common.proto";

package skopa.core;

service PaymentGatewayService {
  rpc List(PaymentGatewayListQuery) returns (PaymentGatewayListResponse);
  rpc GetToken (common.IdRequest) returns (PG_Token);
  rpc CreateAccount (UserIdRequest) returns (common.SuccessResponse);
  rpc UpdateAccount (AccountIdRequest) returns (common.SuccessResponse);
  rpc CreateContact (UserIdRequest) returns (common.SuccessResponse);
  rpc UploadDocument (UploadDocumentRequest) returns (common.SuccessResponse);
  rpc DocumentCheck (AccountIdRequest) returns (common.SuccessResponse);
  rpc CipCheck (AccountIdRequest) returns (common.SuccessResponse);
  rpc CreateReference (UserIdRequest) returns (PrimeTrustData);
  rpc GetBalance (UserIdRequest) returns (BalanceResponse);
  rpc GetWithdrawalParams (UserIdRequest) returns (WithdrawalsDataResponse);
  rpc UpdateBalance (AccountIdRequest) returns (common.SuccessResponse);
  rpc UpdateContribution (AccountIdRequest) returns (common.SuccessResponse);
  rpc AddWithdrawalParams (WithdrawalParams) returns (WithdrawalResponse);
  rpc MakeWithdrawal (TransferMethodRequest) returns (PrimeTrustData);
  rpc UpdateWithdraw (AccountIdRequest) returns (common.SuccessResponse);
  rpc CreateCreditCardResource (UserIdRequest) returns (CreditCardResourceResponse);
  rpc VerifyCreditCard (VerifyCreditCardRequest) returns (common.SuccessResponse);
  rpc GetCreditCards (UserIdRequest) returns (CreditCardsResponse);
  rpc TransferFunds (TransferFundsRequest) returns (TransferFundsResponse);

}

message TransferFundsRequest {
  uint32 to = 1;
  uint32 from = 2;
  string amount = 3;
}

message TransferFundsResponse{
  TransferFunds data = 1;
}

message TransferFunds {
  string uuid = 1;
  string amount = 2;
  string currency_type = 3;
  string status = 4;
  string created_at = 5;
}


message CreditCardsResponse{
  repeated CreditCard data = 1;
}

message CreditCard {
  string uuid = 1;
  string transfer_method_id = 2;
  string credit_card_bin = 3;
  string credit_card_type = 4;
  string credit_card_expiration_date = 5;
  string created_at = 6;
  string updated_at = 7;
  string status = 8;
}

message VerifyCreditCardRequest {
  uint32 id = 1;
  string resource_id = 2;
}

message CreditCardResourceResponse {
  string resource_id = 1;
  string resource_token = 2;
}

message WithdrawalsDataResponse{
  repeated Withdrawal data = 1;
}

message Withdrawal {
  string transfer_method_id = 1;
  string bank_account_number = 2;
  string routing_number = 3;
  string funds_transfer_type = 4;
  string bank_account_name = 5;
}


message PaymentGatewayRequest {
  string name = 1;
}

message PaymentGatewayListQuery {
  uint32 limit = 1;
  uint32 offset = 2;
}

message PaymentGatewayListResponse {
  repeated PaymentGateway items = 1;
  uint32 count = 2;
}

message PaymentGateway {
  uint32 id =1;
  string alias = 2;
  string name = 3;
}


message TransferMethodRequest {
  uint32 id = 1;
  string funds_transfer_method_id = 2;
  string amount = 3;
}

message WithdrawalResponse{
   string transfer_method_id = 1;
}

message WithdrawalParams{
  uint32 id = 1;
  string bank_account_number = 2;
  string routing_number = 3;
  string funds_transfer_type = 4;
  string bank_account_name = 5;
}

message BalanceResponse{
  string settled = 1;
  string currency_type = 2;
}

message PrimeTrustData {
  string data = 1;
}


message AccountIdRequest{
  string id = 1;
  string payment_gateway = 2;
  optional string resource_id = 3;
}


message FileData  {
  bytes buffer = 1;
  string fieldname = 2;
  string originalname = 3;
  string encoding = 4;
  string mimetype = 5;
  uint32 size = 6;
}

message UploadDocumentRequest {
  string label = 1;
  FileData file = 2;
  UserIdRequest userId = 3;

}


message UserIdRequest{
  uint32 id = 1;
}

message PG_Token {
  Token_Data data = 1;
}

message Token_Data {
  string token = 1;
}